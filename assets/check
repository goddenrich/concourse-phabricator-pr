#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

payload=$TMPDIR/git-resource-request

cat > $payload <&0

load_pubkey $payload
configure_https_tunnel $payload
configure_git_ssl_verification $payload
configure_credentials $payload

uri=$(jq -r '.source.uri // ""' < $payload)
# branch=$(jq -r '.source.branch // ""' < $payload)
# paths="$(jq -r '(.source.paths // ["."])[]' < $payload)" # those "'s are important
# ignore_paths="$(jq -r '":!" + (.source.ignore_paths // [])[]' < $payload)" # these ones too
# tag_filter=$(jq -r '.source.tag_filter // ""' < $payload)
tag_filter='phabricator/diff/*'
git_config_payload=$(jq -r '.source.git_config // []' < $payload)
ref=$(jq -r '.version.ref // ""' < $payload)
# skip_ci_disabled=$(jq -r '.source.disable_ci_skip // false' < $payload)

configure_git_global "${git_config_payload}"

destination=$TMPDIR/git-resource-repo-cache

if [ -d $destination ]; then
  cd $destination
  git reset --hard FETCH_HEAD
else
  git clone --single-branch $uri $destination --depth 1
  cd $destination
fi
git fetch --tags


  {
    if [ -n "$ref" ]; then
      ref_for_search=$(sed 's#/#\\/#g' <<< $ref)
      git tag --list "$tag_filter" --list --sort=taggerdate | sed -ne "/$ref_for_search/,$ p"
    else
      git tag --list "$tag_filter" --sort=taggerdate | tail -1
    fi
  } | jq -R '.' | jq -s "map({ref: .})" >&3
