#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

destination=$1

if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

bin_dir="${0%/*}"
if [ "${bin_dir#/}" == "$bin_dir" ]; then
  bin_dir="$PWD/$bin_dir"
fi

payload=$(mktemp $TMPDIR/phabricator-pr-resource-request.XXXXXX)

cat > $payload <&0

load_pubkey $payload
configure_git_ssl_verification $payload
configure_credentials $payload

repo_uri=$(jq -r '.source.repo_uri // ""' < $payload)
diff=$(jq -r '.version.diff // 0' < $payload)
version=$(jq -r '.version' < $payload)
base=$(jq -r '.version.base // "HEAD"' < $payload)
depth=$(jq -r '(.params.depth // 0)' < $payload)

configure_git_global "${git_config_payload}"

if [ -z "$repo_uri" ]; then
  echo "invalid payload (missing repo_uri):" >&2
  cat $payload >&2
  exit 1
fi

depthflag=""
if test "$depth" -gt 0 2> /dev/null; then
  depthflag="--depth $depth"
fi


if [ -d $destination ]; then
  cd $destination
  git reset --hard FETCH_HEAD
  git pull
else
  git clone --single-branch $repo_uri $destination $depthflag
  cd $destination
fi

concourse_git_resource__depth="$depth" \
  "$bin_dir"/deepen_shallow_clone_until_ref_is_found "$base"

arc patch --diff $diff

jq -n "{version: $(echo $version | jq)}" >&3
